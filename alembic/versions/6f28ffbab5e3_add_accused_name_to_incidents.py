"""Add accused_name to incidents

Revision ID: 6f28ffbab5e3
Revises: a80ede8ab04c
Create Date: 2023-12-07 23:43:53.163311

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6f28ffbab5e3'
down_revision: Union[str, None] = 'a80ede8ab04c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('already_scraped_pdfs',
    sa.Column('pdf_date', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('pdf_date'),
    schema='public'
    )
    op.create_table('already_scraped_urls',
    sa.Column('url', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('url'),
    schema='public'
    )
    op.drop_table('manually_verified_urls')
    op.drop_constraint('PersonAddress_AddressID_fkey', 'PersonAddress', type_='foreignkey')
    op.drop_constraint('PersonAddress_PersonID_fkey', 'PersonAddress', type_='foreignkey')
    op.create_foreign_key(None, 'PersonAddress', 'addresses', ['AddressID'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'PersonAddress', 'persons', ['PersonID'], ['id'], source_schema='public', referent_schema='public')
    op.add_column('incidents', sa.Column('accused_name', sa.String(), nullable=True))
    op.drop_constraint('incidents_accused_person_id_fkey', 'incidents', type_='foreignkey')
    op.drop_constraint('incidents_article_id_fkey', 'incidents', type_='foreignkey')
    op.create_foreign_key(None, 'incidents', 'article', ['article_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'incidents', 'persons', ['accused_person_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('incidents_from_pdf_accused_person_id_fkey', 'incidents_from_pdf', type_='foreignkey')
    op.create_foreign_key(None, 'incidents_from_pdf', 'persons', ['accused_person_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('incidents_with_errors_article_id_fkey', 'incidents_with_errors', type_='foreignkey')
    op.create_foreign_key(None, 'incidents_with_errors', 'article', ['article_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'incidents_with_errors', schema='public', type_='foreignkey')
    op.create_foreign_key('incidents_with_errors_article_id_fkey', 'incidents_with_errors', 'article', ['article_id'], ['id'])
    op.drop_constraint(None, 'incidents_from_pdf', schema='public', type_='foreignkey')
    op.create_foreign_key('incidents_from_pdf_accused_person_id_fkey', 'incidents_from_pdf', 'persons', ['accused_person_id'], ['id'])
    op.drop_constraint(None, 'incidents', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'incidents', schema='public', type_='foreignkey')
    op.create_foreign_key('incidents_article_id_fkey', 'incidents', 'article', ['article_id'], ['id'])
    op.create_foreign_key('incidents_accused_person_id_fkey', 'incidents', 'persons', ['accused_person_id'], ['id'])
    op.drop_column('incidents', 'accused_name')
    op.drop_constraint(None, 'PersonAddress', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'PersonAddress', schema='public', type_='foreignkey')
    op.create_foreign_key('PersonAddress_PersonID_fkey', 'PersonAddress', 'persons', ['PersonID'], ['id'])
    op.create_foreign_key('PersonAddress_AddressID_fkey', 'PersonAddress', 'addresses', ['AddressID'], ['id'])
    op.create_table('manually_verified_urls',
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('url', name='manually_verified_urls_pkey')
    )
    op.drop_table('already_scraped_urls', schema='public')
    op.drop_table('already_scraped_pdfs', schema='public')
    # ### end Alembic commands ###
