"""re-add accused_person_id

Revision ID: 458f0e4773ab
Revises: 0e086d6d5f49
Create Date: 2023-11-30 00:14:45.038414

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '458f0e4773ab'
down_revision: Union[str, None] = '0e086d6d5f49'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TABLE incidents_from_pdf ALTER COLUMN incident_date TYPE date USING incident_date::date')
    op.execute('ALTER TABLE incidents_from_pdf ALTER COLUMN incident_reported_date TYPE date USING incident_reported_date::date')
    op.execute('ALTER TABLE incidents ALTER COLUMN incident_reported_date TYPE date USING incident_reported_date::date')
    op.execute('ALTER TABLE incidents ALTER COLUMN structured_source TYPE BOOLEAN USING structured_source::BOOLEAN')
    op.drop_constraint('PersonAddress_PersonID_fkey', 'PersonAddress', type_='foreignkey')
    op.drop_constraint('PersonAddress_AddressID_fkey', 'PersonAddress', type_='foreignkey')
    op.create_foreign_key(None, 'PersonAddress', 'addresses', ['AddressID'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'PersonAddress', 'persons', ['PersonID'], ['id'], source_schema='public', referent_schema='public')
    op.add_column('incidents', sa.Column('accused_person_id', sa.Integer(), nullable=True))
    op.alter_column('incidents', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('incidents', 'url',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    #op.alter_column('incidents', 'incident_reported_date',
    #           existing_type=sa.TEXT(),
    #           type_=sa.Date(),
    #           nullable=False)
    op.alter_column('incidents', 'accused_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('incidents', 'accused_age',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('incidents', 'accused_location',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('incidents', 'charges',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('incidents', 'details',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('incidents', 'legal_actions',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('incidents', 'structured_source',
               existing_type=sa.TEXT(),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.drop_constraint('incidents_article_id_fkey', 'incidents', type_='foreignkey')
    op.create_foreign_key(None, 'incidents', 'article', ['article_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'incidents', 'persons', ['accused_person_id'], ['id'], source_schema='public', referent_schema='public')
    op.add_column('incidents_from_pdf', sa.Column('accused_person_id', sa.Integer(), nullable=True))
    op.alter_column('incidents_from_pdf', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('incidents_from_pdf', 'incident_reported_date',
               existing_type=sa.TEXT(),
               type_=sa.Date(),
               nullable=False)
    op.alter_column('incidents_from_pdf', 'accused_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('incidents_from_pdf', 'accused_age',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('incidents_from_pdf', 'accused_location',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('incidents_from_pdf', 'charges',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('incidents_from_pdf', 'details',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('incidents_from_pdf', 'legal_actions',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('incidents_from_pdf', 'incident_date',
               existing_type=sa.TEXT(),
               type_=sa.Date(),
               existing_nullable=True)
    op.create_foreign_key(None, 'incidents_from_pdf', 'persons', ['accused_person_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('incidents_with_errors_article_id_fkey', 'incidents_with_errors', type_='foreignkey')
    op.create_foreign_key(None, 'incidents_with_errors', 'article', ['article_id'], ['id'], source_schema='public', referent_schema='public')
    op.execute('ALTER TABLE incidents ALTER COLUMN incident_date TYPE date USING incident_date::date')
    #op.execute('ALTER TABLE incidents ALTER COLUMN incident_reported_date TYPE date USING incident_reported_date::date')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TABLE incidents ALTER COLUMN incident_date TYPE date USING incident_date::date')
    op.execute('ALTER TABLE incidents ALTER COLUMN incident_reported_date TYPE date USING incident_reported_date::date')
    op.drop_constraint(None, 'incidents_with_errors', schema='public', type_='foreignkey')
    op.create_foreign_key('incidents_with_errors_article_id_fkey', 'incidents_with_errors', 'article', ['article_id'], ['id'])
    op.drop_constraint(None, 'incidents_from_pdf', schema='public', type_='foreignkey')
    op.alter_column('incidents_from_pdf', 'incident_date',
               existing_type=sa.Date(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('incidents_from_pdf', 'legal_actions',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('incidents_from_pdf', 'details',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('incidents_from_pdf', 'charges',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('incidents_from_pdf', 'accused_location',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('incidents_from_pdf', 'accused_age',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('incidents_from_pdf', 'accused_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('incidents_from_pdf', 'incident_reported_date',
               existing_type=sa.Date(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('incidents_from_pdf', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_column('incidents_from_pdf', 'accused_person_id')
    op.drop_constraint(None, 'incidents', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'incidents', schema='public', type_='foreignkey')
    op.create_foreign_key('incidents_article_id_fkey', 'incidents', 'article', ['article_id'], ['id'])
    op.alter_column('incidents', 'structured_source',
               existing_type=sa.Boolean(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('incidents', 'legal_actions',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('incidents', 'details',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('incidents', 'charges',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('incidents', 'accused_location',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('incidents', 'accused_age',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('incidents', 'accused_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('incidents', 'incident_reported_date',
               existing_type=sa.Date(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('incidents', 'url',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('incidents', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_column('incidents', 'accused_person_id')
    op.drop_constraint(None, 'PersonAddress', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'PersonAddress', schema='public', type_='foreignkey')
    op.create_foreign_key('PersonAddress_AddressID_fkey', 'PersonAddress', 'addresses', ['AddressID'], ['id'])
    op.create_foreign_key('PersonAddress_PersonID_fkey', 'PersonAddress', 'persons', ['PersonID'], ['id'])
    # ### end Alembic commands ###
