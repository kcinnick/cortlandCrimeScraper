"""make a revision before adding IncidentCharge table

Revision ID: bf26598e934a
Revises: 4331bad3b93f
Create Date: 2023-12-04 18:03:41.354867

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bf26598e934a'
down_revision: Union[str, None] = '4331bad3b93f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('charges')
    op.drop_constraint('PersonAddress_AddressID_fkey', 'PersonAddress', type_='foreignkey')
    op.drop_constraint('PersonAddress_PersonID_fkey', 'PersonAddress', type_='foreignkey')
    op.create_foreign_key(None, 'PersonAddress', 'addresses', ['AddressID'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'PersonAddress', 'persons', ['PersonID'], ['id'], source_schema='public', referent_schema='public')
    op.alter_column('incidents', 'incident_reported_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.drop_constraint('incidents_accused_person_id_fkey', 'incidents', type_='foreignkey')
    op.drop_constraint('incidents_article_id_fkey', 'incidents', type_='foreignkey')
    op.create_foreign_key(None, 'incidents', 'persons', ['accused_person_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'incidents', 'article', ['article_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('incidents_from_pdf_accused_person_id_fkey', 'incidents_from_pdf', type_='foreignkey')
    op.create_foreign_key(None, 'incidents_from_pdf', 'persons', ['accused_person_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('incidents_with_errors_article_id_fkey', 'incidents_with_errors', type_='foreignkey')
    op.create_foreign_key(None, 'incidents_with_errors', 'article', ['article_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'incidents_with_errors', schema='public', type_='foreignkey')
    op.create_foreign_key('incidents_with_errors_article_id_fkey', 'incidents_with_errors', 'article', ['article_id'], ['id'])
    op.drop_constraint(None, 'incidents_from_pdf', schema='public', type_='foreignkey')
    op.create_foreign_key('incidents_from_pdf_accused_person_id_fkey', 'incidents_from_pdf', 'persons', ['accused_person_id'], ['id'])
    op.drop_constraint(None, 'incidents', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'incidents', schema='public', type_='foreignkey')
    op.create_foreign_key('incidents_article_id_fkey', 'incidents', 'article', ['article_id'], ['id'])
    op.create_foreign_key('incidents_accused_person_id_fkey', 'incidents', 'persons', ['accused_person_id'], ['id'])
    op.alter_column('incidents', 'incident_reported_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.drop_constraint(None, 'PersonAddress', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'PersonAddress', schema='public', type_='foreignkey')
    op.create_foreign_key('PersonAddress_PersonID_fkey', 'PersonAddress', 'persons', ['PersonID'], ['id'])
    op.create_foreign_key('PersonAddress_AddressID_fkey', 'PersonAddress', 'addresses', ['AddressID'], ['id'])
    op.create_table('charges',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('charge', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('charge_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='charges_pkey'),
    sa.UniqueConstraint('charge', name='charges_charge_key')
    )
    # ### end Alembic commands ###
